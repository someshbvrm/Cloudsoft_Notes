Initialize git respository
git init

Check the available commands
git

Create readme.md and add to staging area
git add readme.md

Check the status
git status	#Output - Changes to be committed new file : readme.md

Move the file to repository
git commit -m "readme.md file is added"

Check the status
git status	#Output - nothing to commit, working tree clean

Check the branches
git branch	#Output - master

Create new branch "develop"
git branch develop

Check the branches
git branch 	#Output - *master (* indicates currently we are in this branch)
			   develop

Switch from master to develop
git checkout develop

Check the branches
git branch 	#Output -  master 
			  *develop (* indicates currently we are in this branch)

Create feature branch "login" on top of develop branch.
git checkout develop
git branch login
git checkout login

Create login.jsp page and add it to staging and repo
git add login.jsp
git commit -m "login.jsp added"

Check the commits and head in login branch
git log

Check the commits and head in other branches	#login branch is way ahead of other two because of file added.

If you want to merge the login with develop then you should be develop and merge
git checkout develop
git merge login

If you want to merge to master branch, always merge with latest merged branch
git checkout master
git merge develop 	#we used develop instead of login

Likewise first edit the code in login branch and merge with develop branch and finally with master branch

Deleting a branch	#Only after merging a branch gets deleted
git branch -d login

Create new branch "register" on top of develop branch and switch to the new branch
git checkout -b register

Created register.jsp, added, committed to register branch
git add register.jsp
git commit -m "register.jsp added"

Delete unmerged branch
git checkout develop
git branch -D register	#-D is for unmerged branch and -d is for merged branch


To download complete remote repo
git clone repo-url

To check the origin (Fetch url and Push url)
git remote -v

Process:
Fork - copies main repo (developed by "xyz" person) repo to our remote repo
Clone our remote repo to local repo
Work on our local repo
Push the changes to remote repo
Raise a pull request (PR) to merge our remote repo to main repo
Main repo person "xyz" accept/reject to merge the changes into his main repo

Working with remote repo:
-------------------------

If you want to push code to particular branch, For example There are two branches 1.master 2.cloudsoft. You need to push code to cloudsoft then
git push origin cloudsoft

It asks for username : someshbvrm 	#Github username. Asking password is replaced with token from Aug 21
	    password : we need to give PAT
----------------------------------------------------------------------------------------------------------------
Account-->Settings-->Developer settings-->Persoanl access tokens-->Tokens(classic)-->Generate a new token(classic)
Name - 
Expiration - 30 	#default
Select scope		#giving permissions
[] repo			#enable the repo checkbox

then generate token
----------------------------------------------------------------------------------------------------------------

Then merge the cloudsoft branch code with master
Click pull request.

Owner gets request - Merge pull request-->confirm merge




