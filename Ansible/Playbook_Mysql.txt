---
- name: Install MySQL, Redis, and RabbitMQ on Ubuntu EC2
  hosts: ubuntu_servers
  become: yes
  vars:
    mysql_root_password: "Cloudsoft@123"
    rabbitmq_admin_user: "admin"
    rabbitmq_admin_password: "StrongRabbitPass123"

  tasks:
    ######################################################################
    # 1. SYSTEM PREPARATION
    ######################################################################
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install basic dependencies
      apt:
        name:
          - curl
          - gnupg
          - apt-transport-https
        state: present

    ######################################################################
    # 2. MYSQL INSTALLATION
    ######################################################################
    - name: Install MySQL server
      apt:
        name: mysql-server
        state: present

    - name: Ensure Python MySQL dependency is installed
      apt:
        name: python3-pymysql
        state: present

    - name: Ensure MySQL is running
      service:
        name: mysql
        state: started
        enabled: yes

    - name: Ensure MySQL root password is set
      community.mysql.mysql_user:
        login_user: root
        login_unix_socket: /var/run/mysqld/mysqld.sock
        name: root
        host: localhost
        password: "{{ mysql_root_password }}"
        priv: "*.*:ALL,GRANT"
        state: present

    ######################################################################
    # 3. REDIS INSTALLATION
    ######################################################################
    - name: Install Redis
      apt:
        name: redis-server
        state: present

    - name: Configure Redis to listen on all interfaces
      lineinfile:
        path: /etc/redis/redis.conf
        regexp: '^bind '
        line: 'bind 0.0.0.0'
        backup: yes

    - name: Ensure Redis is running
      service:
        name: redis-server
        state: started
        enabled: yes

    ######################################################################
    # 4. RABBITMQ INSTALLATION
    ######################################################################
    - name: Add Team RabbitMQ signing key
      shell: |
        curl -1sLf "https://keys.openpgp.org/vks/v1/by-fingerprint/0A9AF2115F4687BD29803A206B73A36E6026DFCA" \
        | gpg --dearmor \
        | tee /usr/share/keyrings/com.rabbitmq.team.gpg > /dev/null
      args:
        executable: /bin/bash

    - name: Add RabbitMQ repositories
      copy:
        dest: /etc/apt/sources.list.d/rabbitmq.list
        content: |
          ## Modern Erlang/OTP releases
          deb [arch=amd64 signed-by=/usr/share/keyrings/com.rabbitmq.team.gpg] https://deb1.rabbitmq.com/rabbitmq-erlang/ubuntu noble noble main
          deb [arch=amd64 signed-by=/usr/share/keyrings/com.rabbitmq.team.gpg] https://deb2.rabbitmq.com/rabbitmq-erlang/ubuntu noble noble main

          ## Provides modern RabbitMQ releases
          deb [arch=amd64 signed-by=/usr/share/keyrings/com.rabbitmq.team.gpg] https://deb1.rabbitmq.com/rabbitmq-server/ubuntu noble noble main
          deb [arch=amd64 signed-by=/usr/share/keyrings/com.rabbitmq.team.gpg] https://deb2.rabbitmq.com/rabbitmq-server/ubuntu noble noble main

    - name: Update package cache for RabbitMQ
      apt:
        update_cache: yes

    - name: Install RabbitMQ server
      apt:
        name: rabbitmq-server
        state: present

    - name: Enable RabbitMQ management plugin
      command: rabbitmq-plugins enable rabbitmq_management
      args:
        creates: /etc/rabbitmq/enabled_plugins

    - name: Ensure RabbitMQ is running
      service:
        name: rabbitmq-server
        state: started
        enabled: yes

    - name: Wait for RabbitMQ to initialize
      pause:
        seconds: 10

    - name: Create RabbitMQ admin user
      command: >
        rabbitmqctl add_user {{ rabbitmq_admin_user }} {{ rabbitmq_admin_password }}
      ignore_errors: yes

    - name: Set RabbitMQ admin user tags
      command: >
        rabbitmqctl set_user_tags {{ rabbitmq_admin_user }} administrator
      ignore_errors: yes

    - name: Set RabbitMQ admin user permissions
      command: >
        rabbitmqctl set_permissions -p / {{ rabbitmq_admin_user }} ".*" ".*" ".*"
      ignore_errors: yes

    ######################################################################
    # 5. VERIFICATION
    ######################################################################
    - name: Verify MySQL installation
      command: mysql -u root -p{{ mysql_root_password }} -e "SELECT VERSION();"
      register: mysql_version
      ignore_errors: yes

    - name: Show MySQL version
      debug:
        msg: "MySQL Version: {{ mysql_version.stdout }}"

    - name: Verify Redis installation
      command: redis-cli ping
      register: redis_status
      ignore_errors: yes

    - name: Show Redis status
      debug:
        msg: "Redis Response: {{ redis_status.stdout }}"

    - name: Verify RabbitMQ installation
      command: rabbitmqctl status
      register: rabbitmq_status
      ignore_errors: yes

    - name: Show RabbitMQ status
      debug:
        msg: "RabbitMQ installed successfully"
