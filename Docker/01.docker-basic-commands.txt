To install docker:

sudo apt update
sudo apt install docker.io
sudo service docker status
sudo systemctl enable docker
sudo docker info	#To check whether docker is installed and started 

Adding ubuntu to sudoer group to execute commands without sudo.
sudo usermod -aG docker ubuntu

Restart the session

For help
docker command --help
-------------------------------------------------------------------------------------
Docker folder structure:

/var/lib/docker/

    overlay2/ # Image and container layer data

    containers/ # Metadata for running/stopped containers

    image/ # Image metadata

    volumes/ # Named and anonymous volumes

    networks/ # Network configurations

    tmp/ # Temporary files

When you pull an image (e.g., docker pull ubuntu:latest), its layers end up in:
/var/lib/docker/overlay2/

-------------------------------------------------------------------------------------

To pull tomcat image from Dockerhub registry
sudo docker pull hello-world	#pulls hello-world:latest image
sudo docker pull hello-world:9	#pulls hello-world:9 image

To check the images
sudo docker images
sudo docker images -q	#quite - only shows the image names instead of details


To search an image in Dockerhub
sudo docker search tomcat

---------------------------------------------------------------------------------------

To create container based on image		#By default latest image is pulled to local directory if unspecified
sudo docker pull tomcat:latest			#Image location: /var/lib/docker/overylay2/
docker create --name mytomcat tomcat:latest	


pull + create = run.  Directly we can create container directly with run command.

docker run docker create --name mytomcat1 tomcat:latest -p 8081:8081

Note: Here internal port is 8080. External port is 8081. External ports are unique.  Use -p or -publish

To check list of running containers
sudo docker ps 

To check list of all containers
sudo docker ps -a

To get only names of all containers
sudo docker ps -aq

----------------------------------------------------------------------------------------

To start, stop, restart the container
sudo docker start mytomcat1
sudo docker stop mytomcat1
sudo docker restart mhytomcat1


To remove images
sudo docker rmi tomcat -f

Note: mytomcat & mytomcat1a have dependency on tomcat image. So using -f removes the images forcefully

To remove running container
sudo docker stop tomcat1
sudo docker rm tomcat1		#Container-ID or Container-Name can be used interchangeably in commands
sudo docker rm b3dbae7b213c 
sudo docker rm tomcat2 -f	#Removing container forcefully
To remove all stopped containers
sudo docker prune

To remove only dangling containers 	#Unused containers are called dangling containers
docker rm $(docker ps -aq -f status=exited -f status=created)

To remove all containers
sudo docker rm $(docker ps -aq)		#Use -aq to pass only names of all containers


--------------------------------------------------------------------------------------

Detached Mode (-d)
When you run a container in detached mode with -d, it works like a background service—imagine starting a music player and closing the app while the song keeps playing. The container keeps running, but it won’t show logs or block your terminal. This is perfect for web servers, databases, or any long-running service where you don’t need to see real-time output. You can always check logs later with docker logs or reattach if needed.

Foreground Mode (Default)
If you run a container without -d, it operates in the foreground, like watching a movie on fullscreen. All logs and output stream directly to your terminal, giving you live feedback. This is great for debugging or short-lived tasks, but pressing Ctrl+C will stop both the container and the process inside. It’s the simplest way to run a container but ties up your terminal until it finishes.

Interactive Mode (-it)
Interactive mode (-it) turns the container into a live workspace, like joining a video call where you can type and respond. It’s commonly used for shells (e.g., bash or sh) to run commands inside the container. The session feels like you’re "inside" the container until you type exit or press Ctrl+D. Without -it, the container would start and immediately exit because it has no way to accept input.

Background vs. Foreground Comparison
Detached containers run silently like background apps, while foreground containers take over your terminal like a focused task. Interactive mode is a special type of foreground behavior that lets you communicate with the container directly. Choose detached for servers, foreground for logging, and interactive for troubleshooting—each mode serves a different purpose in managing how containers behave.

---------------------------------------------------------------------------------------------

To run a container in detached mode
sudo docker run --name mytomcat2 -p 8080:8080 -d tomcat

To run a container in Interactive mode
sudo docker execute -it --name mytomcat3 -p 8082:8080 tomcat

----------------------------------------------------------------------------------------------

To view logs of a container
sudo docker logs mytomcat2

To stream logs continuously
sudo docker logs -f mytomcat2		#-f means follow

To check logs with timestamp
docker logs -t mytomcat2


To check last 10 lines
docker logs --tail=20 mytomcat2

To view live container statistics
sudo docker stats

To monitor specific containers
sudo docker stats mytomcat1 mytomcat2 mytomcat3

To check running processes in a container	
sudo docker top mytomcat1	#Real-time Process Monitoring

---------------------------------------------------------------------------------------------
Reminder:  Container_ID and Container_Name can be interchangeably used in all above commands


